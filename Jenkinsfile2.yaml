
pipeline {
    agent any

    tools {
        jdk 'Jdk17'
        maven 'Maven3'
        }
    environment {
        # def major = 1
        # def minor = 0
        # def patch = 0
        // Set the JAVA_HOME environment variable to point to the JDK 17 installation path.
        JAVA_HOME = '/var/jenkins_home/tools/hudson.model.JDK/Java17'
        DOCKER_USER_NAME = "abhipatil1390"
        APP_NAME = "javaproject02"
        //DOCKER_PASS = credentials('dockerpass')
        IMAGE_NAME = "${DOCKER_USER_NAME}" + "/" + "${APP_NAME}"
        IMAGE_TAG = "latest"
        }           
    stages {
         stage("Cleanup Workspace"){
            steps {
                cleanWs()
                }  

           }
        stage("Code Checkout") {
            steps{
                script{
                    try {
                      git branch: 'master', credentialsId:'github', url: 'https://github.com/abhipatil1390/Java_Project_Health_App.git'
                    }
                    catch (Exception e) {
                        echo " Code Checkout is failed: ${e.message} "
                        error("Code Checkout is failed") 
                    }
                }
            } 
        }

        stage('Versioning') {
            steps {
                script {
                    // Read the current version from a file or elsewhere
                    def versionFile = readFile('/home/ubuntu01/.jenkins/workspace/healthApp/version.txt')
                    def currentVersion = versionFile.trim()

                    // Split the current version into major, minor, and patch parts
                    def (major, minor, patch) = currentVersion.tokenize('.')

                    // Increment the appropriate part (e.g., minor version)
                    minor = minor.toInteger() + 1

                    // Construct the new semantic version
                    def newVersion = "${major}.${minor}.${patch}"

                    // Write the new version back to the file
                    writeFile(file: '/home/ubuntu01/.jenkins/workspace/healthApp/version.txt', text: newVersion)
                    sh ' cat  /home/ubuntu01/.jenkins/workspace/healthApp/version.txt'
                    // Print the new version for verification
                    echo "New version: ${newVersion}"
                }
            }
        }
       
}
}
